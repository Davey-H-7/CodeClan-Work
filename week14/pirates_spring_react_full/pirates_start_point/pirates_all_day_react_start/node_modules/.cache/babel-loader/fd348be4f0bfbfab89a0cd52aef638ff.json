{"ast":null,"code":"import _slicedToArray from \"/Users/codeclanstudent/Desktop/G38/codeclan_work/week14/pirates_spring_react_full/pirates_start_point/pirates_all_day_react_start/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/codeclanstudent/Desktop/G38/codeclan_work/week14/pirates_spring_react_full/pirates_start_point/pirates_all_day_react_start/src/containers/PirateContainer.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Route, Routes, useParams } from 'react-router-dom';\nimport PirateList from '../components/pirates/PirateList';\nimport PirateDetail from '../components/pirates/PirateDetail';\nimport PirateForm from '../components/pirates/PirateForm';\n\nvar PirateContainer = function PirateContainer() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      pirates = _useState2[0],\n      setPirates = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ships = _useState4[0],\n      setShips = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      raids = _useState6[0],\n      setRaids = _useState6[1];\n\n  useEffect(function () {\n    // TODO update to use API request\n    var piratePromise = request.get(\"http://localhost:8080/api/pirates\");\n    var shipPromise = [];\n    var raidPromise = [];\n    Promise.all([piratePromise, shipPromise, raidPromise]).then(function (data) {\n      setPirates(data[0]);\n      setShips(data[1]);\n      setRaids(data[2]);\n    });\n  }, []);\n\n  var findPirateById = function findPirateById(id) {\n    return pirates.find(function (pirate) {\n      return pirate.id === parseInt(id);\n    });\n  };\n\n  var PirateDetailWrapper = function PirateDetailWrapper() {\n    var _useParams = useParams(),\n        id = _useParams.id;\n\n    var foundPirate = findPirateById(id);\n    return React.createElement(PirateDetail, {\n      pirate: foundPirate,\n      handleDelete: handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  };\n\n  var handleDelete = function handleDelete(id) {\n    // TODO: use API to delete by ID\n    window.location = '/pirates';\n  };\n\n  var handlePost = function handlePost(pirate) {\n    // TODO: use API to create pirate\n    window.location = '/pirates';\n  };\n\n  return React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/new\",\n    element: React.createElement(PirateForm, {\n      ships: ships,\n      onCreate: handlePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/:id\",\n    element: React.createElement(PirateDetailWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/\",\n    element: React.createElement(PirateList, {\n      pirates: pirates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default PirateContainer;","map":{"version":3,"sources":["/Users/codeclanstudent/Desktop/G38/codeclan_work/week14/pirates_spring_react_full/pirates_start_point/pirates_all_day_react_start/src/containers/PirateContainer.js"],"names":["React","useEffect","useState","Route","Routes","useParams","PirateList","PirateDetail","PirateForm","PirateContainer","pirates","setPirates","ships","setShips","raids","setRaids","piratePromise","request","get","shipPromise","raidPromise","Promise","all","then","data","findPirateById","id","find","pirate","parseInt","PirateDetailWrapper","foundPirate","handleDelete","window","location","handlePost"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, Routes, useParams } from 'react-router-dom';\nimport PirateList from '../components/pirates/PirateList';\nimport PirateDetail from '../components/pirates/PirateDetail';\nimport PirateForm from '../components/pirates/PirateForm';\n\n\nconst PirateContainer = () => {\n\n  const [pirates, setPirates] = useState([])\n  const [ships, setShips] = useState([])\n  const [raids, setRaids] = useState([])\n\n  useEffect(() => {\n    // TODO update to use API request\n    \n    const piratePromise = request.get(\"http://localhost:8080/api/pirates\");\n    const shipPromise = [];\n    const raidPromise = [];\n\n    Promise.all([piratePromise, shipPromise, raidPromise])\n      .then((data) => {\n        setPirates(data[0])\n        setShips(data[1])\n        setRaids(data[2])\n      })\n  }, [])\n\n  const findPirateById = (id) => {\n    return pirates.find((pirate) => {\n      return pirate.id === parseInt(id);\n    })\n  }\n\n  const PirateDetailWrapper = () => {\n    const { id } = useParams();\n    let foundPirate = findPirateById(id)\n    return <PirateDetail pirate={foundPirate} handleDelete={handleDelete} />;\n  };\n\n  const handleDelete = (id) => {\n    // TODO: use API to delete by ID\n    window.location = '/pirates';\n  }\n\n  const handlePost = (pirate) => {\n    // TODO: use API to create pirate\n    window.location = '/pirates'\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/new\" element={\n        <PirateForm ships={ships} onCreate={handlePost} />\n      } />\n      <Route path=\"/:id\" element={\n        <PirateDetailWrapper />\n      } />\n      <Route path=\"/\" element={<PirateList pirates={pirates} />} />\n    </Routes>\n  )\n\n}\n\nexport default PirateContainer;\n"]},"metadata":{},"sourceType":"module"}