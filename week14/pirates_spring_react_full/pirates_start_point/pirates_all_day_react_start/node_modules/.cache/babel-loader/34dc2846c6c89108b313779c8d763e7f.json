{"ast":null,"code":"import _slicedToArray from \"/Users/codeclanstudent/Desktop/G38/codeclan_work/week14/pirates_spring_react_full/pirates_start_point/pirates_all_day_react_start/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/codeclanstudent/Desktop/G38/codeclan_work/week14/pirates_spring_react_full/pirates_start_point/pirates_all_day_react_start/src/containers/ShipContainer.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Route, Routes, useParams } from 'react-router-dom';\nimport ShipList from '../components/ships/ShipList';\nimport ShipDetail from '../components/ships/ShipDetail';\n\nvar ShipContainer = function ShipContainer() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      pirates = _useState2[0],\n      setPirates = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ships = _useState4[0],\n      setShips = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      raids = _useState6[0],\n      setRaids = _useState6[1];\n\n  useEffect(function () {\n    // TODO update to use API request\n    var piratePromise = fetch(\"/api/pirates\").then(function (res) {\n      return res.json();\n    });\n    var shipPromise = fetch(\"/api/ships\").then(function (res) {\n      return res.json();\n    });\n    var raidPromise = fetch(\"/api/raids\").then(function (res) {\n      return res.json();\n    });\n    Promise.all([piratePromise, shipPromise, raidPromise]).then(function (data) {\n      setPirates(data[0]);\n      setShips(data[1]);\n      setRaids(data[2]);\n    });\n  }, []);\n\n  var findShipById = function findShipById(id) {\n    return ships.find(function (ship) {\n      return ship.id === parseInt(id);\n    });\n  };\n\n  var ShipDetailWrapper = function ShipDetailWrapper() {\n    var _useParams = useParams(),\n        id = _useParams.id;\n\n    var foundShip = findShipById(id);\n    return React.createElement(ShipDetail, {\n      ship: foundShip,\n      handleDelete: handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  };\n\n  var handleDelete = function handleDelete(id) {\n    // TODO: use API to delete by ID\n    window.location = '/ships';\n  };\n\n  var handlePost = function handlePost(ship) {\n    fetch(\"/api/ships\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(ship)\n    });\n    window.location = '/ships';\n  };\n\n  return React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/:id\",\n    element: React.createElement(ShipDetailWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/\",\n    element: React.createElement(ShipList, {\n      ships: ships,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nexport default ShipContainer;","map":{"version":3,"sources":["/Users/codeclanstudent/Desktop/G38/codeclan_work/week14/pirates_spring_react_full/pirates_start_point/pirates_all_day_react_start/src/containers/ShipContainer.js"],"names":["React","useEffect","useState","Route","Routes","useParams","ShipList","ShipDetail","ShipContainer","pirates","setPirates","ships","setShips","raids","setRaids","piratePromise","fetch","then","res","json","shipPromise","raidPromise","Promise","all","data","findShipById","id","find","ship","parseInt","ShipDetailWrapper","foundShip","handleDelete","window","location","handlePost","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, Routes, useParams } from 'react-router-dom';\nimport ShipList from '../components/ships/ShipList';\nimport ShipDetail from '../components/ships/ShipDetail';\n\n\nconst ShipContainer = () => {\n\n  const [pirates, setPirates] = useState([])\n  const [ships, setShips] = useState([])\n  const [raids, setRaids] = useState([])\n\n  useEffect(() => {\n    // TODO update to use API request\n    const piratePromise = fetch(\"/api/pirates\").then(res=>res.json());\n    const shipPromise = fetch(\"/api/ships\").then(res=>res.json());\n    const raidPromise = fetch(\"/api/raids\").then(res=>res.json());\n\n    Promise.all([piratePromise, shipPromise, raidPromise])\n      .then((data) => {\n        setPirates(data[0])\n        setShips(data[1])\n        setRaids(data[2])\n      })\n  }, [])\n\n  const findShipById = (id) => {\n    return ships.find((ship) => {\n      return ship.id === parseInt(id);\n    })\n  }\n\n  const ShipDetailWrapper = () => {\n    const { id } = useParams();\n    let foundShip = findShipById(id)\n    return <ShipDetail ship={foundShip} handleDelete={handleDelete} />;\n  };\n\n  const handleDelete = (id) => {\n    // TODO: use API to delete by ID\n    window.location = '/ships';\n  }\n\n  const handlePost = (ship) => {\n    fetch(\"/api/ships\",{\n    method: \"POST\",\n    headers: {\"Content-Type\": \"application/json\"},\n    body: JSON.stringify(ship)\n  })\n    window.location = '/ships'\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/:id\" element={\n        <ShipDetailWrapper />\n      } />\n      <Route path=\"/\" element={<ShipList ships={ships} />} />\n    </Routes>\n  )\n\n}\n\nexport default ShipContainer;\n"]},"metadata":{},"sourceType":"module"}